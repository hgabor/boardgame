# http://en.wikipedia.org/wiki/English_draughts

Settings (
	PlayerCount: 2;
	PieceTypes: piece, king;
	BoardDimensions: {8, 8};
	RulesOfPlayer2: RotationOfPlayer1;
)

# Functions()

Init (
	mustMoveWith := None;
	captured := False;
)

StartingBoard (
	Valid (
		(x + y) % 2 = 0;
	)
	Player(1) (
		piece: {1,1}; piece: {3,1}; piece: {5,1}; piece: {7,1};
		piece: {2,2}; piece: {4,2}; piece: {6,2}; piece: {8,2};
		piece: {1,3}; piece: {3,3}; piece: {5,3}; piece: {7,3};
	)
	Player(2) (
		piece: {8,8}; piece: {6,8}; piece: {4,8}; piece: {2,8};
		piece: {7,7}; piece: {5,7}; piece: {3,7}; piece: {1,7};
		piece: {8,6}; piece: {6,6}; piece: {4,6}; piece: {2,6};
	)
)

Moves (
	# Normal moves
	piece: {_, _} -> Empty {x+1, y+1} ;
	piece: {_, _} -> Empty {x-1, y+1} ;
	king: {_, _} -> Empty {x+1, y+1} ;
	king: {_, _} -> Empty {x-1, y+1} ;
	king: {_, _} -> Empty {x+1, y-1} ;
	king: {_, _} -> Empty {x-1, y-1} ;

	# Captures
	piece: {_, _} -> Empty {x+2, y+2}
		Label capture
		If PieceAt({x+1,y+1}).Owner = OppositePlayer Then
			RemovePiece({x+1,y+1});
			captured := True;
			mustMoveWith := to;
		End;
	piece: {_, _} -> Empty {x-2, y+2}
		Label capture
		If PieceAt({x-1,y+1}).Owner = OppositePlayer Then
			RemovePiece({x-1,y+1});
			captured := True;
			mustMoveWith := to;
		End;
	king: {_, _} -> Empty {x+2, y+2}
		Label capture
		If PieceAt({x+1,y+1}).Owner = OppositePlayer Then
			RemovePiece({x+1,y+1});
			captured := True;
			mustMoveWith := to;
		End;
	king: {_, _} -> Empty {x+2, y-2}
		Label capture
		If PieceAt({x+1,y-1}).Owner = OppositePlayer Then
			RemovePiece({x+1,y-1});
			captured := True;
			mustMoveWith := to;
		End;
	king: {_, _} -> Empty {x-2, y+2}
		Label capture
		If PieceAt({x-1,y+1}).Owner = OppositePlayer Then
			RemovePiece({x-1,y+1});
			captured := True;
			mustMoveWith := to;
		End;
	king: {_, _} -> Empty {x-2, y-2}
		Label capture
		If PieceAt({x-1,y-1}).Owner = OppositePlayer Then
			RemovePiece({x-1,y-1});
			captured := True;
			mustMoveWith := to;
		End;
)

Events (
	Player(1).CannotMove (
		If mustMoveWith = None Then
			Win(Player(2));
		End
		mustMoveWith := None;
	)
	Player(1).FinishedMove (
		If captured Then
			NextPlayer(Player(1));
			captured := False;
		End
		If y = 8 Then
			NextPlayer(OppositePlayer);
			captured := False;
			mustMoveWith := None;
			RemovePiece(to);
			Place(king, to);
		End
	)
	Player(1).BeforeMove (
		# Ütést folytatni
		If mustMoveWith != None Then
			AllowedMoves := [Select $ From AllowedMoves Where (label = capture And from = mustMoveWith)];
		End
		# Ütéskényszer
		If mustMoveWith = None And Count([Select $ From AllowedMoves Where label = capture]) > 0 Then
			AllowedMoves := [Select $ From AllowedMoves Where label = capture];
		End
	)
)
